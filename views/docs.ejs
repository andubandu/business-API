<!DOCTYPE html>
<html>
  <head>
    <title>API Documentation</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 20px;
        background-color: #f5f5f5;
      }

      .container {
        max-width: 900px;
        margin: 0 auto;
        background-color: white;
        padding: 30px;
        border: 1px solid #ccc;
      }

      h1 {
        color: #333;
        text-align: center;
        border-bottom: 2px solid #007bff;
        padding-bottom: 10px;
      }

      h2 {
        color: #555;
        margin-top: 30px;
        border-left: 4px solid #007bff;
        padding-left: 15px;
      }

      h3 {
        color: #666;
        margin-top: 20px;
      }

      .section {
        margin-bottom: 30px;
        padding: 20px;
        border: 1px solid #ddd;
        background-color: #f9f9f9;
      }

      .route {
        margin-bottom: 20px;
        padding: 15px;
        background-color: #f8f9fa;
        border-left: 4px solid #007bff;
      }

      .alert {
        padding: 15px;
        margin-bottom: 20px;
        border: 1px solid #ddd;
      }

      .alert-warning {
        color: #856404;
        background-color: #fff3cd;
        border-color: #ffeaa7;
      }

      .alert-success {
        color: #155724;
        background-color: #d4edda;
        border-color: #c3e6cb;
      }

      .payment-info {
        background-color: #e3f2fd;
        padding: 20px;
        border: 1px solid #bbdefb;
        margin: 20px 0;
      }

      .payment-info h4 {
        margin: 0 0 10px 0;
        color: #0d47a1;
      }

      .endpoint {
        background: #007bff;
        color: white;
        padding: 4px 8px;
        font-family: monospace;
        font-weight: bold;
      }

      .method-get {
        background: #28a745;
      }
      .method-post {
        background: #007bff;
      }
      .method-delete {
        background: #dc3545;
      }
      .method-put {
        background: #d9dc35;
      }
      .method-patch {
        background: #ffc107;
      }

      code {
        background-color: #f1f1f1;
        padding: 2px 4px;
        font-family: monospace;
      }

      ul {
        margin: 10px 0;
        padding-left: 20px;
      }

      li {
        margin-bottom: 5px;
      }

      .new-feature {
        background-color: #d1ecf1;
        border: 1px solid #bee5eb;
        padding: 15px;
        border-radius: 5px;
        margin: 20px 0;
      }

      .new-feature h4 {
        margin: 0 0 10px 0;
        color: #0c5460;
      }

      .socket-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        border-radius: 8px;
        margin: 20px 0;
      }

      .socket-section h4 {
        margin: 0 0 15px 0;
        color: white;
      }

      .socket-event {
        background: rgba(255, 255, 255, 0.1);
        padding: 10px;
        border-radius: 4px;
        margin: 10px 0;
        border-left: 3px solid rgba(255, 255, 255, 0.3);
      }

      .embed-example {
        background: #f8f9fa;
        padding: 20px;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        margin: 20px 0;
      }

      .embed-example h4 {
        margin: 0 0 15px 0;
        color: #495057;
      }

      .code-block {
        background: #2d3748;
        color: #e2e8f0;
        padding: 15px;
        border-radius: 6px;
        font-family: "Courier New", monospace;
        font-size: 14px;
        overflow-x: auto;
        margin: 10px 0;
      }

      .search-section {
        background: linear-gradient(135deg, #4caf50 0%, #45a049 100%);
        color: white;
        padding: 20px;
        border-radius: 8px;
        margin: 20px 0;
      }

      .search-section h4 {
        margin: 0 0 15px 0;
        color: white;
      }

      .search-example {
        background: rgba(255, 255, 255, 0.1);
        padding: 10px;
        border-radius: 4px;
        margin: 10px 0;
        border-left: 3px solid rgba(255, 255, 255, 0.3);
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>koders4hire API</h1>
      <p>
        we are open source, and we will make sure you will <i>NOT</i> abuse it
      </p>
      <!-- <div class="alert alert-warning">
        <strong>Note:</strong> Google OAuth integration coming soon. Currently
        supporting GitHub OAuth and email/password.
      </div> -->

      <div class="new-feature">
        <h4>Real-time Inbox with Socket.io</h4>
        <p>Complete real-time notification system with embeddable widget:</p>
        <ul>
          <li>
            <strong>Real-time notifications</strong> - Instant delivery via
            Socket.io
          </li>
          <li>
            <strong>Embeddable widget</strong> - Perfect for iframe integration
          </li>
          <li>
            <strong>Live unread counts</strong> - Updates without page refresh
          </li>
          <li><strong>Sound notifications</strong> - Subtle audio alerts</li>
          <li>
            <strong>Connection status</strong> - Visual connection indicator
          </li>
        </ul>
      </div>

      <div class="search-section">
        <h4>Search Functionality</h4>
        <p><strong>Powerful search across services and users:</strong></p>
        <div class="search-example">
          <strong>Search Everything:</strong><br />
          <code>GET /search?q=react&type=all&limit=10&page=1</code>
        </div>
        <div class="search-example">
          <strong>Search Services Only:</strong><br />
          <code>GET /search?q=web development&type=services</code>
        </div>
        <div class="search-example">
          <strong>Search Users Only:</strong><br />
          <code>GET /search?q=john&type=users</code>
        </div>
        <p><strong>Search Features:</strong></p>
        <ul>
          <li>Search services by title, description, category, tags</li>
          <li>Search users by username, real name, role</li>
          <li>Pagination support with limit and page parameters</li>
          <li>Results sorted by rating and creation date</li>
          <li>Only shows verified users in search results</li>
        </ul>
      </div>

      <div class="embed-example">
        <h4>Embeddable Inbox Widget</h4>
        <p>Embed the inbox as a dropdown widget in any website:</p>
        <div class="code-block">
          <iframe
            src="<%= baseUrl %>/inbox?token=..."
            width="400"
            height="500"
            frameborder="0"
            style="
              border-radius: 12px;
              box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
            "
          >
          </iframe>
        </div>
        <p><strong>Features:</strong></p>
        <ul>
          <li>Compact 400x500px dropdown design</li>
          <li>Real-time notifications via Socket.io</li>
          <li>Cross-origin token support</li>
          <li>Mobile-responsive design</li>
          <li>Auto-refresh every 60 seconds</li>
        </ul>
      </div>

      <div class="socket-section">
        <h4>Socket.io Real-time Events</h4>
        <p><strong>Connection:</strong> Authenticate with JWT token</p>
        <div class="code-block">
          const socket = io({ auth: { token: 'your-jwt-token' } });
        </div>

        <div class="socket-event">
          <strong>new_notification</strong><br />
          Emitted when user receives a new notification<br />
          <code>socket.on('new_notification', (notification) => { ... })</code>
        </div>

        <div class="socket-event">
          <strong>unread_count_updated</strong><br />
          Emitted when unread count changes<br />
          <code>socket.on('unread_count_updated', (count) => { ... })</code>
        </div>

        <div class="socket-event">
          <strong>mark_notification_read</strong><br />
          Mark notification as read<br />
          <code>socket.emit('mark_notification_read', notificationId)</code>
        </div>

        <div class="socket-event">
          <strong>delete_notification</strong><br />
          Delete notification<br />
          <code>socket.emit('delete_notification', notificationId)</code>
        </div>

        <div class="socket-event">
          <strong>notification_deleted</strong><br />
          Emitted when notification is deleted<br />
          <code
            >socket.on('notification_deleted', (notificationId) => { ...
            })</code
          >
        </div>
      </div>

      <div class="payment-info">
        <h4>PayPal Payment System</h4>
        <p><strong>Automatic Payment Split:</strong></p>
        <ul>
          <li><strong>60%</strong> goes to the developer</li>
          <li><strong>40%</strong> platform fee</li>
          <li><strong>Automatic</strong> - no manual transfers</li>
          <li>
            <strong>Instant notifications</strong> - sellers know immediately
            when someone buys
          </li>
        </ul>
      </div>

      <div class="section">
        <h2>Search Routes</h2>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /search</h3>
          <p>Search across services and users</p>
          <p><strong>Query Parameters:</strong></p>
          <ul>
            <li><code>q</code> - Search query (required)</li>
            <li>
              <code>type</code> - Search type: 'all', 'services', 'users'
              (default: 'all')
            </li>
            <li><code>limit</code> - Results per page (default: 20)</li>
            <li><code>page</code> - Page number (default: 1)</li>
          </ul>
          <p>
            <strong>Response:</strong> Paginated results with services and/or
            users
          </p>
          <p><strong>Search Fields:</strong></p>
          <ul>
            <li>
              <strong>Services:</strong> title, description, category, tags
            </li>
            <li>
              <strong>Users:</strong> username, real_name, role (verified only)
            </li>
          </ul>
        </div>
      </div>

      <div class="section">
        <h2>Authentication Routes</h2>
        <div class="route">
          <h3><span class="endpoint method-post">POST</span> /auth/signup</h3>
          <p>Create new user account</p>
          <p>
            <strong>Body:</strong>
            <code>real_name, username, email, password</code>
          </p>
        </div>
        <div class="route">
          <h3><span class="endpoint method-post">POST</span> /auth/login</h3>
          <p>Login with email and password</p>
          <p><strong>Body:</strong> <code>email, password</code></p>
        </div>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /auth/github</h3>
          <p>Login with GitHub OAuth</p>
          <p>
            Note: after logging in, this will redirect to
            CLIENT_URL/sign-in?token=...
          </p>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /auth/google</h3>
          <p>Login with Google OAuth</p>
          <p>
            Note: after logging in, this will redirect to
            CLIENT_URL/sign-in?token=...
          </p>
          <p>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /auth/me</h3>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
          <p>See current user logged in</p>
        </div>
      </div>

      <div class="section">
        <h2>Notification Routes</h2>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /notifications</h3>
          <p>Get user's notifications (paginated)</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
          <p><strong>Query:</strong> <code>page, limit</code></p>
          <p>
            <strong>Response:</strong> notifications, unreadCount, totalCount,
            pagination info
          </p>
        </div>
        <div class="route">
          <h3>
            <span class="endpoint method-post">POST</span>
            /notifications/read/{id}
          </h3>
          <p>Mark specific notification as read</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
        </div>
        <div class="route">
          <h3>
            <span class="endpoint method-post">POST</span>
            /notifications/read-all
          </h3>
          <p>Mark all notifications as read</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
        </div>
        <div class="route">
          <h3>
            <span class="endpoint method-delete">DELETE</span>
            /notifications/{id}
          </h3>
          <p>Delete notification</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
        </div>
        <div class="route">
          <h3>
            <span class="endpoint method-get">GET</span>
            /notifications/unread-count
          </h3>
          <p>Get unread notification count only</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
        </div>
      </div>

      <div class="section">
        <h2>User Routes</h2>
        <div class="route">
          <h3>
            <span class="endpoint method-get">GET</span> /users/{username}
          </h3>
          <p>Get user profile by username</p>
        </div>
        <div class="route">
          <h3><span class="endpoint method-put">PUT</span> /users/upd</h3>
          <p>Update user profile</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
          <p>
            <strong>Body:</strong>
            <code>real_name, username, email, profile_image</code>
          </p>
        </div>
        <div class="route">
          <h3><span class="endpoint method-delete">DELETE</span> /users/del</h3>
          <p>Delete user account</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
        </div>
      </div>

      <div class="section">
        <h2>Rating Routes</h2>
        <div class="route">
          <h3>
            <span class="endpoint method-post">POST</span> /rating/{serviceId}
          </h3>
          <p>Submit or update a rating for a service</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
          <p>
            <strong>Body:</strong> <code>rating (1-5), review (optional)</code>
          </p>
          <p>
            <strong>Response:</strong> Updated average rating and confirmation
          </p>
          <div class="alert alert-warning">
            <strong>Note:</strong> Users cannot rate their own services.
          </div>
        </div>

        <div class="route">
          <h3>
            <span class="endpoint method-get">GET</span>
            /rating/service/{serviceId}
          </h3>
          <p>Get rating data for a specific service</p>
          <p>
            <strong>Response:</strong>
            <code>{ averageRating, totalRatings, ratings: [ ... ] }</code>
          </p>
        </div>

        <div class="route">
          <h3>
            <span class="endpoint method-get">GET</span> /rating/user/{userId}
          </h3>
          <p>Get ratings received by a user (as a service provider)</p>
          <p>
            <strong>Response:</strong> Array of service ratings with metadata
          </p>
        </div>
      </div>

      <div class="section">
        <h2>PayPal Routes</h2>
        <div class="route">
          <h3>
            <span class="endpoint method-post">POST</span> /paypal/connect
          </h3>
          <p>Connect PayPal account</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
          <p><strong>Body:</strong> <code>paypal_email, merchant_id</code></p>
        </div>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /paypal/status</h3>
          <p>Check PayPal connection status</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
        </div>
      </div>

      <div class="section">
        <h2>Service Routes</h2>
        <div class="route">
          <h3><span class="endpoint method-post">POST</span> /services/new</h3>
          <p>Create new service</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
          <p>
            <strong>Body:</strong>
            <code>title, description, price, currency, category, tags</code>
          </p>
          <p>
            <strong>Supported Currencies:</strong> USD, EUR, GBP, CAD, AUD, JPY
          </p>
        </div>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /services</h3>
          <p>List all services</p>
        </div>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /services/{id}</h3>
          <p>Get service by ID</p>
        </div>
        <div class="route">
          <h3>
            <span class="endpoint method-delete">DELETE</span>
            /services/del/{id}
          </h3>
          <p>Delete service (owner only)</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
        </div>
        <div class="route">
          <h3>
            <span class="endpoint method-put">PUT</span> /services/upd/{id}
          </h3>
          <p>Update service (owner only)</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
          <p>
            <strong>Body:</strong>
            <code>title, description, price, currency, category, tags</code>
          </p>
        </div>
      </div>

      <div class="section">
        <h2>Admin Routes</h2>
        <div class="route">
          <h3>
            <span class="endpoint method-get">GET</span> /admin/verifications
          </h3>
          <p>List pending verifications</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
          <p><strong>Note:</strong> Requires admin role</p>
        </div>
        <div class="route">
          <h3>
            <span class="endpoint method-post">POST</span>
            /admin/approve/{userID}
          </h3>
          <p>Approve verification (sends real-time notification)</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
        </div>
        <div class="route">
          <h3>
            <span class="endpoint method-post">POST</span>
            /admin/reject/{userID}
          </h3>
          <p>Reject verification (sends real-time notification)</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
        </div>
      </div>

      <div class="section">
        <h2>Payment Routes</h2>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /buy/{serviceID}</h3>
          <p>Payment page for service</p>
          <p><strong>Features:</strong></p>
          <ul>
            <li>Shows payment breakdown (60% dev, 40% platform)</li>
            <li>PayPal integration</li>
            <li>Secure payment processing</li>
          </ul>
        </div>
        <div class="route">
          <h3>
            <span class="endpoint method-post">POST</span> /payment/success
          </h3>
          <p>Process successful payment (sends real-time notifications)</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
          <p>
            <strong>Body:</strong>
            <code>serviceID, paymentID, amount, currency, paypal_order_id</code>
          </p>
          <p><strong>Real-time notifications sent:</strong></p>
          <ul>
            <li>Purchase notification to seller (via Socket.io)</li>
            <li>Payout confirmation (success/failure)</li>
            <li>Live unread count updates</li>
          </ul>
        </div>
      </div>

      <div class="section">
        <h2>Verification Routes</h2>
        <div class="route">
          <h3>
            <span class="endpoint method-get">GET</span> /verify?token={jwt}
          </h3>
          <p>Verification form page (requires token parameter)</p>
        </div>
        <div class="route">
          <h3><span class="endpoint method-post">POST</span> /verify</h3>
          <p>Submit verification request</p>
          <p>
            <strong>Body:</strong>
            <code
              >token, requested_role, github_profile, portfolio_url,
              experience_description, technical_answers</code
            >
          </p>
        </div>
      </div>

      <div class="section">
        <h2>Feedback Routes</h2>
        <div class="route">
          <span class="endpoint method-get">GET</span> /feedback
            <h3>Gets all feedbacks</h3>
        </div>
        <div class="route">
          <h3>
            <span class="endpoint method-post">POST</span> /feedback/new
          </h3>
          <p>Submit feedback</p>
          <p>
            <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
          </p>
          <p>
            <strong>Body:</strong>
            <code>content, rating (1-5)</code>
          </p>
          <p><strong>Response:</strong> Confirmation message</p>
          </div>
        <div class="route">
            <h3>
            <span class="endpoint method-get">GET</span> /feedback/{id}
            </h3>
            <p>Get feedback by ID</p>
      </div>
      <div class="route">
        <h3>
            <span class="endpoint method-delete">DELETE</span> /feedback/{id}
        </h3>
        <p>Delete your feedback</p>
        <p>
          <strong>Headers:</strong> <code>Authorization: Bearer {token}</code>
        </p>
        </div>
      </div>
      </div>

      <div class="section">
        <h2>Other Routes</h2>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /docs</h3>
          <p>This documentation page</p>
        </div>
        <div class="route">
          <h3><span class="endpoint method-get">GET</span> /inbox</h3>
          <p>Embeddable inbox widget (perfect for iframes)</p>
          <p>
            <strong>Notes:</strong>MUST have a token query param in order for
            this to work
          </p>
          <p><strong>Features:</strong></p>
          <ul>
            <li>Real-time Socket.io notifications</li>
            <li>Compact dropdown design (400x500px)</li>
            <li>Cross-origin token support</li>
            <li>Auto-refresh and connection status</li>
            <li>Sound notifications for new messages</li>
          </ul>
        </div>
      </div>
    </div>
  </body>
</html>
